{"version":3,"sources":["hooks/userIntersectionObserver.js","components/Footer.jsx","assets/placeholder.jpg","pages/ProjectList.js","pages/Homepage.jsx","pages/FunHomepage.jsx","components/Spacer.jsx","components/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["useIntersectionObserver","target","onIntersect","threshold","rootMargin","React","useEffect","observer","IntersectionObserver","current","observe","unobserve","Footer","setWeather","Fragment","style","borderBottom","marginBottom","width","margin","className","href","onClick","HighlightedProjects","projects","title","subtitle","description","image","github","website","FrontendProjects","DataScienceProjects","name","BackendProjects","ComputerScienceProjects","ComputerEngineering","ElectricalEngineering","Homepage","props","useState","weather","id","newWeather","PageLink","height","Landing","ref","useRef","isVisible","setIsVisible","observerElement","isIntersecting","About","listStyleType","display","padding","map","paragraph","marginRight","marginLeft","src","PicOfMe","alt","Projects","currentProject","setCurrentProject","buttonList","proj","project","ProjectViewer","params","ContactMe","fontSize","console","log","ProfessionalExperience","Spacer","space","unit","pageList","link","withRouter","expanded","setExpanded","page","e","preventDefault","window","location","AppOverlay","App","path","exact","component","FunHomepage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e719a28.chunk.js","sourcesContent":["import React from 'react'\n\nconst useIntersectionObserver = ({\n  target,\n  onIntersect,\n  threshold = 0.1,\n  rootMargin = '0px',\n}) => {\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, {\n      rootMargin,\n      threshold,\n    })\n    const current = target.current\n    observer.observe(current)\n    return () => {\n      observer.unobserve(current)\n    }\n  })\n}\nexport default useIntersectionObserver\n","import React from 'react'\nimport './Footer.scss'\n\nimport { FiCloudSnow, FiCloudRain } from 'react-icons/fi'\nimport { GiPartyPopper } from 'react-icons/gi'\nimport { SiRetroarch } from 'react-icons/si'\nimport { FaGithub, FaLinkedinIn } from 'react-icons/fa'\n\nfunction Footer({ setWeather }) {\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          borderBottom: '1px solid black',\n          marginBottom: '20px',\n          width: '200px',\n          margin: 'auto'\n        }}\n        className=\"FooterLinks\">\n        <button className=\"FooterButton\">\n          <a href={'https://github.com/igreen1'} className=\"InlineLink\">\n            <FaGithub />\n          </a>\n        </button>\n        <button className=\"FooterButton\">\n          <a\n            href={'https://www.linkedin.com/in/ian-green2/'}\n            className=\"InlineLink\"\n          >\n            <FaLinkedinIn />\n          </a>\n        </button>\n      </div>\n      <p>Designed and built (from scratch) by Ian Green</p>\n      <button\n        className=\"FooterButton\"\n        onClick={() => {\n          setWeather('snow')\n        }}\n      >\n        <FiCloudSnow />\n      </button>\n      <button\n        className=\"FooterButton\"\n        onClick={() => {\n          setWeather('rain')\n        }}\n      >\n        <FiCloudRain />\n      </button>\n      {/*\n          className=\"FooterButton\"\n          onClick={() => {\n            toggleRave()\n          }}\n        >\n          <GiPartyPopper />\n        </button>\n        <button\n          className=\"FooterButton\"\n          onClick={() => {\n            toggleRetro()\n          }}\n        >\n          <SiRetroarch />\n        </button> */}\n    </React.Fragment>\n  )\n}\nexport default Footer","export default __webpack_public_path__ + \"static/media/placeholder.968ed984.jpg\";","const HighlightedProjects = {\n\n  'name': 'Highlighted',\n  projects: [\n    {\n      title: 'VIBAH Graphics Library',\n      subtitle: 'A graphics library built on top of WebGL using ReactJS',\n      description: 'VIBAH (the group initials) is a graphics library mirroring ThreeJS. It is built on top of WebGL and implements meshes, objects, grouping, animations, shading, and vertex coloring. To view the project, follow the link to its Github Pages website, but note that the pages often load very slowly due to calculations of normals.',\n      image: 'assets/vibah.jpg',\n      github: 'https://github.com/igreen1/Graphics',\n      website: 'https://igreen1.github.io/Graphics/'\n    },\n    {\n      title: \"'Custom' Programming Language\",\n      subtitle: 'A C-like language we built',\n      description: \"Custom is built upon the idea of replaceable keywords. All keywords come from a configuration file. We built it to allow us to emulate any other language we wanted in our class - though, it is primarily built on a C-like philosophy.\",\n      image: 'assets/custom.png',\n      github: 'https://github.com/igreen1/Custom',\n      website: 'https://igreen1.github.io/Custom',\n    },\n    {\n      title: 'GRNSight',\n      subtitle: 'Graph visualization tool for gene regulatory networks',\n      description: 'This tool shows the suppression/activation networks of gene regulatory networks. I work on the visualization and testing framework, with an emphasis in fixing d3.js issues',\n      image: 'assets/GRNSight.png',\n      github: 'https://github.com/dondi/GRNsight',\n      website: 'https://dondi.github.io/GRNsight/',\n    }\n  ]\n}\n\nconst FrontendProjects = {\n  'name': 'Frontend',\n  projects: [\n    {\n      title: 'Personal Website',\n      subtitle: 'This website, built entirely from scratch in ReactJS with no libraries',\n      description: 'I built this to improve my ReactJS skills without requiring learning a bunch of new libraries. So it is built in (near) vanilla React to showcase my other works. It is built, designed, and maintained by me alone.',\n      image: 'assets/personal_website.png',\n      github: 'https://github.com/igreen1/igreen1.github.io',\n      website: 'https://igreen1.github.io/',\n    },\n    {\n      title: 'GRNSight',\n      subtitle: 'Graph visualization tool for gene regulatory networks',\n      description: 'This tool shows the suppression/activation networks of gene regulatory networks. I work on the visualization and testing framework, with an emphasis in fixing d3.js issues',\n      image: 'assets/GRNSight.png',\n      github: 'https://github.com/dondi/GRNsight',\n      website: 'https://dondi.github.io/GRNsight/',\n    },\n    {\n      title: 'VIBAH Graphics Library',\n      subtitle: 'A graphics library built on top of WebGL using ReactJS',\n      description: 'VIBAH (the group initials) is a graphics library mirroring ThreeJS. It is built on top of WebGL and implements meshes, objects, grouping, animations, shading, and vertex coloring. To view the project, follow the link to its Github Pages website, but note that the pages often load very slowly due to calculations of normals.',\n      image: 'assets/vibah.jpg',\n      github: 'https://github.com/igreen1/Graphics',\n      website: 'https://igreen1.github.io/Graphics/'\n    }\n  ]\n}\n\nconst DataScienceProjects = {\n  name: 'Data Science',\n  projects: [\n    {\n      title: 'John Hopkins University - Applied Physics Laboratory',\n      subtitle: 'Intern: Software Developer for Testing and Evaluation',\n      description: 'As an intern in the Air and Missile Defense Sector, Combat Systems Testing and Evaluation team, \\\n        I worked on improving and automating the workflow, improving data intake of large raw datsets. I programmed in Pandas and propietary software. \\\n        I learned to work on large datasets, to integrate various softwares smoothly, and to use data analytic tools.',\n      image: 'assets/sew.png',\n      website: 'https://www.jhuapl.edu/OurWork/AirandMissileDefense',\n    },\n    {\n      title: 'Fieldpiece',\n      subtitle: 'Intern: Machine Learning model testing and creation',\n      description: 'Worked to intake and munge data from various systems. Employed machine learning on the large data sets to model and predict HVAC behaviour',\n      image: 'ml.jpeg',\n      website: 'https://www.fieldpiece.com/',\n    },\n    {\n      title: 'GRNSight',\n      subtitle: 'Graph visualization tool for gene regulatory networks',\n      description: 'This tool shows the suppression/activation networks of gene regulatory networks. I work on the visualization and testing framework, with an emphasis in fixing d3.js issues',\n      image: 'assets/GRNSight.png',\n      github: 'https://github.com/dondi/GRNsight',\n      website: 'https://dondi.github.io/GRNsight/',\n    },\n  ]\n}\n\n\nconst BackendProjects = {\n  name: 'Backend',\n  projects: [\n    {\n      title: 'Cubesat',\n      subtitle: 'Rotor and Antenna Control Programs',\n      description: 'Various tools developed to automate and integrate the work of the LMU Cubesat lab. Allow for Hamlib control of our custom rotor hardware and large distributed trees of rotors to be controlled from one endpoint. A website showcasing these is in development. The projects are being migrated to GitHub as well.',\n      image: 'assets/cubesat.png',\n      github: 'https://github.com/LMU-Cubesat/'\n    },\n    {\n      title: 'GRNSight',\n      subtitle: 'Graph visualization tool for gene regulatory networks',\n      description: 'This tool shows the suppression/activation networks of gene regulatory networks. I work on the visualization and testing framework, with an emphasis in fixing d3.js issues',\n      image: 'assets/GRNSight.png',\n      github: 'https://github.com/dondi/GRNsight',\n      website: 'https://dondi.github.io/GRNsight/',\n    },\n  ]\n}\n\n\nconst ComputerScienceProjects = {\n  name: 'Computer Science/Theory',\n  projects: [\n    {\n      title: 'Automata Toolbox',\n      subtitle: 'Theory of Computation Final Project ',\n      description: 'This tool performs various operations on finite automata (NFA & DFA) and integrates regex tools with them.',\n      image: 'assets/automata.gif',\n      github: 'https://github.com/igreen1/automata-toolbox',\n    },\n    {\n      title: \"'Custom' Programming Language\",\n      subtitle: 'A C-like language we built',\n      description: \"Custom is built upon the idea of replaceable keywords. All keywords come from a configuration file. We built it to allow us to emulate any other language we wanted in our class - though, it is primarily built on a C-like philosophy.\",\n      image: 'assets/custom.png',\n      github: 'https://github.com/igreen1/Custom',\n      website: 'https://igreen1.github.io/Custom',\n    },\n    {\n      title: 'Programming Languages',\n      subtitle: 'An exploration of six langauges',\n      description: 'In this class, we explored six different programming languages to give us the tools necessary to learn new languages easily and to analyze langauges from a theoretical standpoint.',\n      image: '',\n      github: 'https://github.com/igreen1/lmu-cmsi-386'\n    }\n\n  ]\n}\n\n\nconst ComputerEngineering = {\n  name: 'Computer Engineering',\n  projects: [\n    {\n      title: \"OS/BASH program\",\n      subtitle: 'Modifying the Bash ALIAS command to make it easier to use',\n      description: 'As part of our class, we modified the bash alxias command to allow for permanent storage of aliases, which persisted across terminal instances',\n      image: 'assets/bash.png',\n      github: 'https://github.com/igreen1/CMSI-387',\n    },\n    {\n      title: 'Computer Systems Organization',\n      subtitle: 'Low-level programming in my early years',\n      description: 'This was my introductory course into computer systems and their low-level interfaces. We programmed primarily in Assembly, dabbling in C to help link different parts of the program together.',\n      image: '',\n      github: 'https://github.com/igreen1/CSO',\n    }\n  ]\n}\n\n\nconst ElectricalEngineering = {\n  name: 'Electrical Engineering',\n  projects: [\n    {\n      title: 'Operational Amplifier design',\n      subtitle: 'Design and implementation of an OpAmp',\n      description: 'Designed and built an operational amplifier using at-home lab kits during my Junior Lab II course. The Op-Amp (shown in the image above) was designed in one week and implemented in class (<3 hours). From the abstract: An operational amplifier was tested with a gain of 511, a DC offset of less than 0.01V, an input resistance of 17k-ohm, an output resistance of less than 27ohm, a -3dB cutoff frequency of 50Hz, an output swing of 2.1V. This amplifier was designed for a load of 200ohm. ',\n      website: 'https://www.overleaf.com/read/xmcjxfnxxnsf',\n      image: 'assets/opamp.png'\n    }\n  ]\n}\n\n\nconst SecondaryProjects = {\n  name: 'Test Projects',\n  subtitle: 'Some other recent projects',\n  projects: [\n    {\n      title: 'Automata Toolbox',\n      subtitle: 'Theory of Computation Final Project ',\n      description: 'This tool performs various operations on finite automata (NFA & DFA) and integrates regex tools with them.',\n      image: 'assets/automata.gif',\n      github: 'https://github.com/igreen1/automata-toolbox',\n    },\n    {\n      title: 'Cubesat',\n      subtitle: 'Rotor and Antenna Control Programs',\n      description: 'Various tools developed to automate and integrate the work of the LMU Cubesat lab. Allow for Hamlib control of our custom rotor hardware and large distributed trees of rotors to be controlled from one endpoint. A website showcasing these is in development. The projects are being migrated to GitHub as well.',\n      image: 'assets/cubesat.png',\n      github: 'https://github.com/LMU-Cubesat/'\n    }\n  ]\n}\n\n\nexport { HighlightedProjects, BackendProjects, ComputerScienceProjects, ComputerEngineering, ElectricalEngineering, SecondaryProjects, DataScienceProjects, FrontendProjects }","import React, { useState } from 'react'\nimport './Homepage.scss'\nimport '../assets/weather.css'\nimport useIntersectionObserver from '../hooks/userIntersectionObserver'\nimport Footer from '../components/Footer'\n\n// assets\nimport PicOfMe from '../assets/placeholder.jpg'\nimport { FiGithub, FiExternalLink } from 'react-icons/fi'\nimport { HighlightedProjects, BackendProjects, ComputerScienceProjects, ComputerEngineering, ElectricalEngineering, DataScienceProjects, FrontendProjects } from './ProjectList'\n\nexport default function Homepage(props) {\n\n  const [weather, setWeather] = React.useState('')\n\n  const changeWeather = (newWeather) => {\n\n    if (newWeather === weather) {\n      setWeather('')\n    }\n    else {\n      setWeather(newWeather)\n    }\n  }\n\n  return (\n    <div key='Homepage' className={`${weather !== '' ? `weather ${weather}` : ''}`}>\n      <Landing />\n      <PageLink id='About' />\n      {/* <Spacer space='3' unit='vmin'/>  */}\n      <About />\n      <PageLink id='Projects' />\n      <Projects />\n      {/* <PageLink id=\"Resume\" /> */}\n      {/* <ProfessionalExperience /> */}\n      <PageLink id='Contact' />\n      <ContactMe style={{ marginBottom: '5vh' }} />\n\n      <Footer setWeather={changeWeather} />\n    </div>\n  )\n\n}\n\n\n//Rather than pollute the source folders, below are the sections\n\nconst PageLink = ({ id }) => {\n  return <div style={{ height: '10px' }} id={id}></div>\n}\n\nconst Landing = () => {\n  const ref = React.useRef()\n  const [isVisible, setIsVisible] = React.useState(false)\n\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting) {\n        setIsVisible(true)\n        observerElement.unobserve(ref.current)\n      }\n    },\n  })\n  return (\n    <React.Fragment>\n      <div id=\"Home\" ref={ref} className={`Section Landing ${isVisible ? 'visible' : 'invisible'}`}>\n        <h1 id=\"Name\">Ian Green</h1>\n        <p id=\"NameSubtitle\">\n          <strong>Full</strong>-stack developer\n        </p>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst About = () => {\n  const ref = React.useRef()\n  const [isVisible, setIsVisible] = React.useState(false)\n\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting) {\n        setIsVisible(true)\n        observerElement.unobserve(ref.current)\n      }\n    },\n  })\n\n  const AboutMe = [\n    `I'm Ian. I'm pursuing two degrees: a B.S. in Computer Science with a minor in Applied Mathematics\n    and a B.S.E. in Electrical Engineering with a Computer Engineering emphasis with a minor in Pure Mathematics.`,\n    `Beyond my majors and research, I strive to incorporate service into my life.\n    Through an on-campus service org, Alpha Sigma Nu honor society, and Tau Beta Pi honor society, I perform upwards of 50 hours of service a semester.`,\n    `In my freetime, I am usually found doing some outdoor activities - I love kayaking, hiking, and bouldering. My current goal is to visit every national park in the next ten years.`,\n\n  ]\n\n\n\n  return (\n    <React.Fragment>\n      <div ref={ref} className={`Section ${isVisible ? 'visible' : 'invisible'}`}>\n        <h1 className='Title'>About</h1>\n        <ul style={{ listStyleType: \"none\", display: \"flex\", padding: '0%' }}>\n          <li>\n            {AboutMe.map((paragraph) => <p style={{ marginRight: '3px' }} className='Text'>{paragraph}</p>)}\n          </li>\n          <img style={{ marginLeft: '3px' }} src={PicOfMe} className='InlineImage' alt='Image of myself on a hike' />\n        </ul>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst Projects = () => {\n\n  const ref = React.useRef()\n  const [isVisible, setIsVisible] = React.useState(false)\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting) {\n        setIsVisible(true)\n        observerElement.unobserve(ref.current)\n      }\n    },\n  })\n\n\n\n  const [currentProject, setCurrentProject] = React.useState(HighlightedProjects)\n\n  const projectCategoryButton = (project) => {\n    return <button className='FlatButton' onClick={() => setCurrentProject(project)}>{project.name}</button>\n  }\n  const buttonList = [HighlightedProjects, FrontendProjects, DataScienceProjects, BackendProjects, ComputerScienceProjects, ComputerEngineering, ElectricalEngineering, ].map((proj) => projectCategoryButton(proj))\n\n  return (\n    <React.Fragment>\n      <div ref={ref} className={`Section ${isVisible ? 'visible' : 'invisible'}`}>\n        {buttonList}\n        <h1 className='Title'>{currentProject.name}</h1>\n        {currentProject.projects.map((project) =>\n          <ProjectViewer\n            title={project?.title}\n            subtitle={project?.subtitle}\n            description={project?.description}\n            image={project?.image}\n            github={project?.github}\n            website={project?.website}\n          />\n        )}\n      </div>\n\n    </React.Fragment >\n  )\n}\n\nconst ProjectViewer = (params) => {\n\n  return (\n    <div className='Project'>\n      <img src={params.image} className='Subsection HeaderImage' />\n      <h2>{params.title}</h2>\n      <h3 className='Subtitle'>{params.subtitle}</h3>\n      <div className='Links'>\n        {params.github && (\n          <a href={params.github}>\n            <FiGithub />\n          </a>\n        )}\n        {params.website && (\n          <a href={params.website}>\n            <FiExternalLink />\n          </a>\n        )}\n      </div>\n      <p className='Text'> {params?.description} </p>\n    </div>\n  )\n\n}\n\nconst ProfessionalExperience = () => {\n  const ref = React.useRef()\n  const [isVisible, setIsVisible] = React.useState(false)\n\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting) {\n        setIsVisible(true)\n        observerElement.unobserve(ref.current)\n      }\n    },\n  })\n\n  const ProfessionalPositions = [\n    {\n      title: 'John Hopkins University - Applied Physics Laboratory',\n      subtitle: 'Intern: Software Developer for Testing and Evaluation',\n      description: 'As an intern in the Air and Missile Defense Sector, Combat Systems Testing and Evaluation team, \\\n        I worked on improving and automating the workflow, improving data intake of large raw datsets. I programmed in Pandas and propietary software. \\\n        I learned to work on large datasets, to integrate various softwares smoothly, and to use data analytic tools.',\n      image: 'assets/sew.png', //TODO: get the SEWIP logo ha\n      website: 'https://www.jhuapl.edu/OurWork/AirandMissileDefense',\n    },\n    {\n      title: 'Loyola Marymount University - Various Departments',\n      subtitle: 'Teaching Assistant',\n      description: \"I have worked for various departments and various classes as a TA at LMU. \\\n        In the Math department, I worked with the Business Calculus class as well as the general Calculus I, II, and III classes as a TA. \\\n        In the EE department, I worked as a TA for Algorithms and Applications, a class teaching MATLAB. In these positions, \\\n        I've learned better communication when helping students, improved my skills in math and programming, and trained my scheduling abilities.\",\n      image: 'assets/lmu.png' //TODO\n    }\n    // {\n    //    TODO: the work with HVAC company\n    // }\n  ]\n\n  return (\n    <React.Fragment>\n      <div ref={ref} className={`Section ${isVisible ? 'visible' : 'invisible'}`}>\n        <h1 className='Title'>Professional Experience</h1>\n        {ProfessionalPositions.map((project) =>\n          <ProjectViewer\n            title={project?.title}\n            subtitle={project?.subtitle}\n            description={project?.description}\n            image={project?.image}\n            website={project?.website}\n          />\n        )}\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst ContactMe = () => {\n  const ref = React.useRef()\n  const [isVisible, setIsVisible] = React.useState(false)\n\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting) {\n        setIsVisible(true)\n        observerElement.unobserve(ref.current)\n      }\n    },\n  })\n  return (\n    <React.Fragment>\n      <div ref={ref} className={`Section ${isVisible ? 'visible' : 'invisible'}`}>\n        <h1 className='Title'>Contact</h1>\n        <p>At some point, I may add a form here. For now, contact me via email!</p>\n        <button className='OverlayButton'>\n          <a className='InlineLink' style={{ fontSize: '70%' }} href='mailto:iangreen2.00@gmail.com'>iangreen2.00@gmail.com</a>\n        </button>\n\n      </div>\n    </React.Fragment >\n  )\n}","/*\nLife is too short to take everything seriously\n*/\n\n\nimport React from 'react'\nimport './FunHomepage.scss'\nimport '../assets/weather.css'\nimport useIntersectionObserver from '../hooks/userIntersectionObserver'\nimport Footer from '../components/Footer'\n\n// assets\nimport PicOfMe from '../assets/placeholder.jpg'\nimport { FiGithub, FiExternalLink } from 'react-icons/fi'\n\nexport default function Homepage(props) {\n\n  const [weather, setWeather] = React.useState('')\n\n  const changeWeather = (newWeather) => {\n\n    if (newWeather === weather) {\n      setWeather('')\n    }\n    else {\n      setWeather(newWeather)\n    }\n  }\n\n  return (\n    <div key='FunHomepage' className={`FunHomepage ${weather !== '' ? `weather ${weather}` : ''}`}>\n      <Landing />\n      <PageLink id='About' />\n      {/* <Spacer space='3' unit='vmin'/>  */}\n      <About />\n      <PageLink id='Projects' />\n      <Projects />\n      <PageLink id=\"Resume\" />\n      <ProfessionalExperience />\n      <PageLink id='Contact' />\n      <ContactMe style={{ marginBottom: '5vh' }} />\n\n      <Footer setWeather={changeWeather} />\n    </div>\n  )\n\n}\n\n\n//Rather than pollute the source folders, below are the sections\n\nconst PageLink = ({ id }) => {\n  console.log(id)\n  return <div style={{ height: '10px' }} id={id}></div>\n}\n\nconst Landing = () => {\n  const ref = React.useRef()\n  const [isVisible, setIsVisible] = React.useState(false)\n\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting) {\n        setIsVisible(true)\n        observerElement.unobserve(ref.current)\n      }\n    },\n  })\n  return (\n    <React.Fragment>\n      <div id=\"Home\" ref={ref} className={`Section Landing ${isVisible ? 'visible' : 'invisible'}`}>\n        <h1 id=\"Name\">Ian Green</h1>\n        <p id=\"NameSubtitle\">\n          <strong>Full</strong>-stack developer\n        </p>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst About = () => {\n  const ref = React.useRef()\n  const [isVisible, setIsVisible] = React.useState(false)\n\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting) {\n        setIsVisible(true)\n        observerElement.unobserve(ref.current)\n      }\n    },\n  })\n\n  const AboutMe = [\n    `I'm Ian. I'm pursuing two degrees: a B.S. in Computer Science with a minor in Applied Mathematics\n    and a B.S.E. in Electrical Engineering with a Computer Engineering emphasis with a minor in Pure Mathematics. I am in two on-campus research labs - the LMU Bioinformatics Lab and the LMU Cubesat Program.\n    I also usually work multiple jobs on campus, holding simulataneous TA positions in the EE and Math departments as well as multiple tutoring positiosn`,\n    `Beyond my majors and research, I actively participate in service opportunities. \n    As a member of an on-campus service org, Alpha Sigma Nu honor society, and Tau Beta Pi honor society, I perform upwards of 50 hours of service a semester. Even over COVID, I performed 40 hours of service per semester`,\n    `In my freetime, I am usually found doing some outdoor activities - I love kayaking, hiking, and bouldering. My current goal is to visit every national park in the next ten years.`,\n    `I am looking for post-grad opportunities (2022). While my abilities span the entire stack, I am mostly interested in 'low-level' programming eg., firmware.`\n\n  ]\n\n\n  return (\n    <React.Fragment>\n      <div ref={ref} className={`Section ${isVisible ? 'visible' : 'invisible'}`}>\n        <h1 className='Title'>About</h1>\n        <ul style={{ listStyleType: \"none\", display: \"flex\", padding: '0%' }}>\n          <li>\n            {AboutMe.map((paragraph) => <p style={{ marginRight: '3px' }} className='Text'>{paragraph}</p>)}\n          </li>\n          <img style={{ marginLeft: '3px' }} src={PicOfMe} className='InlineImage' alt='Image of myself on a hike' />\n        </ul>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst Projects = () => {\n  const ref = React.useRef()\n  const [isVisible, setIsVisible] = React.useState(false)\n\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting) {\n        setIsVisible(true)\n        observerElement.unobserve(ref.current)\n      }\n    },\n  })\n\n  const ProjectList = [\n    {\n      title: 'VIBAH Graphics Library',\n      subtitle: 'A graphics library built on top of WebGL using ReactJS',\n      description: 'VIBAH (the group initials) is a graphics library mirroring ThreeJS. It is built on top of WebGL and implements meshes, objects, grouping, animations, shading, and vertex coloring. To view the project, follow the link to its Github Pages website, but note that the pages often load very slowly due to calculations of normals.',\n      image: 'assets/vibah.jpg',\n      github: 'https://github.com/igreen1/Graphics',\n      website: 'https://igreen1.github.io/Graphics/'\n    },\n    {\n      title: \"'Custom' Programming Language\",\n      subtitle: 'A C-like language we built',\n      description: \"Custom is built upon the idea of replaceable keywords. All keywords come from a configuration file. We built it to allow us to emulate any other language we wanted in our class - though, it is primarily built on a C-like philosophy.\",\n      image: 'assets/custom.png',\n      github: 'https://github.com/igreen1/Custom',\n      website: 'https://igreen1.github.io/Custom',\n    },\n    {\n      title: 'GRNSight',\n      subtitle: 'Graph visualization tool for gene regulatory networks',\n      description: 'This tool shows the suppression/activation networks of gene regulatory networks. I work on the visualization and testing framework, with an emphasis in fixing d3.js issues',\n      image: 'assets/GRNSight.png',\n      github: 'https://github.com/dondi/GRNsight',\n      website: 'https://dondi.github.io/GRNsight/',\n    },\n    // {\n    //   title: 'Automata Simulator',\n    //   description: 'TODO',\n    //   image: 'Automata.png'\n    // },\n  ]\n\n  return (\n    <React.Fragment>\n      <div ref={ref} className={`Section ${isVisible ? 'visible' : 'invisible'}`}>\n        <h1 className='Title'>Highlighted Projects</h1>\n        {ProjectList.map((project) =>\n          <ProjectViewer\n            title={project?.title}\n            subtitle={project?.subtitle}\n            description={project?.description}\n            image={project?.image}\n            github={project?.github}\n            website={project?.website}\n          />\n        )}\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst ProjectViewer = (params) => {\n\n  return (\n    <div className='Project'>\n      <img src={params.image} className='Subsection HeaderImage' />\n      <h2>{params.title}</h2>\n      <h3 className='Subtitle'>{params.subtitle}</h3>\n      <div className='Links'>\n        {params.github && (\n          <a href={params.github}>\n            <FiGithub />\n          </a>\n        )}\n        {params.website && (\n          <a href={params.website}>\n            <FiExternalLink />\n          </a>\n        )}\n      </div>\n      <p className='Text'> {params?.description} </p>\n    </div>\n  )\n\n}\n\nconst ProfessionalExperience = () => {\n  const ref = React.useRef()\n  const [isVisible, setIsVisible] = React.useState(false)\n\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting) {\n        setIsVisible(true)\n        observerElement.unobserve(ref.current)\n      }\n    },\n  })\n\n  const ProfessionalPositions = [\n    {\n      title: 'John Hopkins University - Applied Physics Laboratory',\n      subtitle: 'Intern: Software Developer on the Testing and Evaluation Team',\n      description: 'As an intern in the Air and Missile Defense Sector, Combat Systems Testing and Evaluation team, \\\n        I worked on improving and automating the workflow, working on data intake of large raw datsets. I worked in Pandas and propietary software. \\\n        I learned to work with large datasets, to integrate various softwares smoothly, and to use data analytic tools.',\n      image: 'assets/vibah.jpg', //TODO: get the SEWIP logo ha\n      // website: 'https://igreen1.github.io/Graphics/'\n    },\n    {\n      title: 'Loyola Marymount University - Various Departments',\n      subtitle: 'Teaching Assistant',\n      description: \"I have worked for various departments and various classes as a TA at LMU. \\\n        In the Math department, I worked with the Business Calculus class as well as the general Calculus I, II, and III classes as a TA. \\\n        In the EE department, I worked as a TA for Algorithms and Applications, a class teaching MATLAB. In these positions, \\\n        I've learned better communication when helping students, improved my skills in math and programming, and trained my scheduling abilities.\",\n      image: 'assets/vibah.jpg' //TODO\n    }\n    // {\n    //    TODO: the work with HVAC company\n    // }\n  ]\n\n  return (\n    <React.Fragment>\n      <div ref={ref} className={`Section ${isVisible ? 'visible' : 'invisible'}`}>\n        <h1 className='Title'>Professional Experience</h1>\n        {ProfessionalPositions.map((project) =>\n          <ProjectViewer\n            title={project?.title}\n            subtitle={project?.subtitle}\n            description={project?.description}\n            image={project?.image}\n            website={project?.website}\n          />\n        )}\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst ContactMe = () => {\n  const ref = React.useRef()\n  const [isVisible, setIsVisible] = React.useState(false)\n\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting) {\n        setIsVisible(true)\n        observerElement.unobserve(ref.current)\n      }\n    },\n  })\n  return (\n    <React.Fragment>\n      <div ref={ref} className={`Section ${isVisible ? 'visible' : 'invisible'}`}>\n        <h1 className='Title'>Contact</h1>\n        <p>At some point, I may add a form here. For now, contact me via email!</p>\n        <button className='OverlayButton'>\n          <a className='InlineLink' style={{ fontSize: '70%' }} href='mailto:iangreen2.00@gmail.com'>iangreen2.00@gmail.com</a>\n        </button>\n\n      </div>\n    </React.Fragment >\n  )\n}","import React from 'react'\n\nexport default function Spacer({ space, unit, id }) {\n  return <div id={id ? id : ''} style={{ margin:'0', height: space + unit }} />\n}","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { FaAlignRight } from 'react-icons/fa'\nimport Spacer from './Spacer'\nimport './Navbar.scss'\n\nconst Navbar = (props) => {\n\n  const [expanded, setExpanded] = React.useState(false)\n\n  const toggle = () => {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <>\n    <header id=\"Navbar\">\n      <button onClick={() => toggle()} id='ExpandNavbarButton'><FaAlignRight /></button>\n      <div className={expanded ? 'Navbarlist shownav' : 'Navbarlist'}>\n        {pageList.map((page) => {\n          return (\n            <button key={page.name + \"NarbarButton\"} className='NavbarButton' onClick={(e) => {\n              e.preventDefault();\n              window.location.href = page.link\n            }}>\n              {page.name}\n            </button>\n          )\n        })}\n      </div>\n    </header>\n    <Spacer id='NavbarSpacer' space='50' unit='px'/>\n    </>\n  )\n}\n\nconst pageList = [\n  {\n    name: 'Home',\n    link: '/',\n  },\n  {\n    name: 'About',\n    link: '#About',\n  },\n  {\n    name: 'Projects',\n    link: '#Projects',\n  },\n  {\n    name: 'Professional',\n    link: '#Resume'\n  },\n  {\n    name: 'Contact',\n    link: '#Contact',\n  },\n]\n\nexport default withRouter(Navbar)","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport './App.scss';\nimport Homepage from './pages/Homepage'\nimport FunHomepage from './pages/FunHomepage'\nimport Navbar from './components/Navbar'\nimport { FaGithub, FaLinkedinIn } from 'react-icons/fa'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact component={Homepage} />\n          <Route path='/fun' exact component={FunHomepage} />\n        </Switch>\n        <AppOverlay />\n      </Router>\n    </div>\n  );\n}\n\nconst AppOverlay = () => {\n  return ( <React.Fragment className='Overlay'>\n    <div className=\"LeftBar\">\n      <li>\n        <button className=\"OverlayButton\">\n          <a href={'https://github.com/igreen1'} className=\"InlineLink\">\n            <FaGithub />\n          </a>\n        </button>\n      </li>\n      <li>\n        <button className=\"OverlayButton\">\n          <a\n            href={'https://www.linkedin.com/in/ian-green2/'}\n            className=\"InlineLink\"\n          >\n            <FaLinkedinIn />\n          </a>\n        </button>\n      </li>\n      <li className=\"VerticalLine\" />\n    </div>\n    <div className=\"RightBar\">\n      <li>\n        <a href=\"mailto:iangreen2.00@gmail.com\" className=\"Email InlineLink\">\n          iangreen2.00@gmail.com\n          </a>\n      </li>\n      <li className=\"VerticalLine\" style={{ width: '8px' }} />\n    </div>\n  </React.Fragment>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}